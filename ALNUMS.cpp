#include "ALNUMS.h"

byte bitmap[5];

void load_bitmap(char l) {
    int i;
    if(l > 31 && l < 123) {
        i = l - 32;
    } else {
        i = 123 - 32;
    }
  
    for(int j = 0; j < 5; j++) {
        bitmap[j] = pgm_read_byte(&(ALNUMS[i][j]));
    }
}

prog_uchar ALNUMS[][5] PROGMEM =
{
//space ASCII 32
{
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000
},
//! ASCII 33
{
  B00000100,
  B00000100,
  B00000100,
  B00000000,
  B00000100
},
//" ASCII 34
{
  B00001010,
  B00001010,
  B00000000,
  B00000000,
  B00000000
},
//# ASCII 35
{
  B00001010,
  B00011011,
  B00001010,
  B00011011,
  B00001010
},
//$ ASCII 36
{
  B00001110,
  B00010100,
  B00001110,
  B00000101,
  B00001110
},
//% ASCII 37
{
  B00011001,
  B00011010,
  B00000100,
  B00001011,
  B00010011
},
//& ASCII 38
{
  B00001110,
  B00010000,
  B00001000,
  B00010100,
  B00001110
},
//' ASCII 39
{
  B00000100,
  B00000100,
  B00000000,
  B00000000,
  B00000000
},
//( ASCII 40
{
  B00000010,
  B00000100,
  B00000100,
  B00000100,
  B00000010
},
//) ASCII 41
{
  B00001000,
  B00000100,
  B00000100,
  B00000100,
  B00001000
},
//* ASCII 42
{
  B00001010,
  B00000100,
  B00011111,
  B00000100,
  B00001010
},
//+ ASCII 43
{
  B00100001,
  B00000100,
  B00010101,
  B00000100,
  B00010101
},
//, ASCII 44
{
  B00000000,
  B00000000,
  B00000000,
  B00001100,
  B00001000
},
//- ASCII 45
{
  B00000000,
  B00000000,
  B00011111,
  B00000000,
  B00000000
},
//. ASCII 46
{
  B00000000,
  B00000000,
  B00000000,
  B00001100,
  B00001100
},
// / ASCII 47
{
  B00000001,
  B00000010,
  B00000100,
  B00001000,
  B00010000
},
//0 ASCII 48
{
  B00001110,
  B00010011,
  B00010101,
  B00011001,
  B00001110
},
//1 ASCII 49
{
  B00000100,
  B00001100,
  B00000100,
  B00000100,
  B00001110
},
//2 ASCII 50
{
  B00001110,
  B00000001,
  B00000110,
  B00001000,
  B00001111
},
//3 ASCII 51
{
  B00001110,
  B00000001,
  B00000110,
  B00000001,
  B00001110
},
//4 ASCII 52
{
  B00001010,
  B00001010,
  B00001111,
  B00000010,
  B00000010
},
//5 ASCII 53
{
  B00001111,
  B00001000,
  B00001110,
  B00000001,
  B00001110
},
//6 ASCII 54
{
  B00000111,
  B00001000,
  B00001110,
  B00001001,
  B00000110
},
//7 ASCII 55
{
  B00011110,
  B00000010,
  B00000100,
  B00001000,
  B00001000
},
//8 ASCII 56
{
  B00001110,
  B00010001,
  B00001110,
  B00010001,
  B00001110
},
//9 ASCII 57
{
  B00000110,
  B00001001,
  B00000111,
  B00000001,
  B00001110
},
//: ASCII 58
{
  B00001100,
  B00001100,
  B00000000,
  B00001100,
  B00001100
},
//; ASCII 59
{
  B00001100,
  B00001100,
  B00000000,
  B00000100,
  B00001000
},
//< ASCII 60
{
  B00000010,
  B00000100,
  B00001000,
  B00000100,
  B00000010
},
//= ASCII 61
{
  B00000000,
  B00011111,
  B00000000,
  B00011111,
  B00000000
},
//> ASCII 62
{
  B00001000,
  B00000100,
  B00000010,
  B00000100,
  B00001000
},
//? ASCII 63
{
  B00001110,
  B00000001,
  B00000110,
  B00000000,
  B00000100
},
//@ ASCII 64
{
  B00001110,
  B00010101,
  B00010111,
  B00010000,
  B00001111
},
  //A
{
  B00001110,
  B00010001,
  B00011111,
  B00010001,
  B00010001
},
//B
{
  B00011110,
  B00010001,
  B00011110,
  B00010001,
  B00011110
},
//C
{
  B00001110,
  B00010001,
  B00010000,
  B00010001,
  B00001110
},

//D
{
  B00011110,
  B00010001,
  B00010001,
  B00010001,
  B00011110
},
//E
{
  B00011111,
  B00010000,
  B00011110,
  B00010000,
  B00011111
},
//F
{
  B00011111,
  B00010000,
  B00011110,
  B00010000,
  B00010000
},
//G
{
  B00001110,
  B00010000,
  B00010011,
  B00010001,
  B00001110
},
//H
{
  B00010001,
  B00010001,
  B00011111,
  B00010001,
  B00010001
},
//I
{
  B00001110,
  B00000100,
  B00000100,
  B00000100,
  B00001110
},
//J
{
  B00001110,
  B00000100,
  B00000100,
  B00010100,
  B00001100
},
//K
{
  B00010001,
  B00010010,
  B00011100,
  B00010010,
  B00010001
},
//L
{
  B00010000,
  B00010000,
  B00010000,
  B00010000,
  B00011111
},
//M
{
  B00010001,
  B00011011,
  B00010101,
  B00010001,
  B00010001
},
//N
{
  B00010001,
  B00011001,
  B00010101,
  B00010011,
  B00010001
},
//O
{
  B00001110,
  B00010001,
  B00010001,
  B00010001,
  B00001110
},
//P
{
  B00011110,
  B00010001,
  B00011110,
  B00010000,
  B00010000
},
//Q
{
  B00001100,
  B00010010,
  B00010010,
  B00010010,
  B00001101
},
//R
{
  B00011110,
  B00010001,
  B00011110,
  B00010010,
  B00010001
},
//S
{
  B00001110,
  B00010000,
  B00001110,
  B00000001,
  B00001110
},
//T
{
  B00011111,
  B00000100,
  B00000100,
  B00000100,
  B00000100
},
//U
{
  B00010001,
  B00010001,
  B00010001,
  B00010001,
  B00001110
},
//V
{
  B00010001,
  B00010001,
  B00010001,
  B00001010,
  B00000100
},
//W
{
  B00010001,
  B00010001,
  B00010101,
  B00011011,
  B00010001
},
//X
{
  B00010001,
  B00001010,
  B00000100,
  B00001010,
  B00010001
},
//Y
{
  B00010001,
  B00001010,
  B00000100,
  B00000100,
  B00000100
},
//Z
{
  B00011111,
  B00000010,
  B00000100,
  B00001000,
  B00011111
},
//[ ASCII 91
{
  B00001110,
  B00001000,
  B00001000,
  B00001000,
  B00001110
},
//\ ASCII 92
{
  B00010000,
  B00001000,
  B00000100,
  B00000010,
  B00000001
},
//] ASCII 93
{
  B00001110,
  B00000010,
  B00000010,
  B00000010,
  B00001110
},
//^ ASCII 94
{
  B00000100,
  B00001010,
  B00010001,
  B00000000,
  B00000000
},
//_ ASCII 95
{
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00011111
},
//` ASCII 96
{
  B00011111,
  B00000010,
  B00000100,
  B00001000,
  B00011111
},
  //a
{
  B00001110,
  B00010001,
  B00011111,
  B00010001,
  B00010001
},
//b
{
  B00011110,
  B00010001,
  B00011110,
  B00010001,
  B00011110
},
//c
{
  B00001110,
  B00010001,
  B00010000,
  B00010001,
  B00001110
},
//d
{
  B00011110,
  B00010001,
  B00010001,
  B00010001,
  B00011110
},
//e
{
  B00011111,
  B00010000,
  B00011110,
  B00010000,
  B00011111
},
//f
{
  B00011111,
  B00010000,
  B00011110,
  B00010000,
  B00010000
},
//g
{
  B00001110,
  B00010000,
  B00010011,
  B00010001,
  B00001110
},
//h
{
  B00010001,
  B00010001,
  B00011111,
  B00010001,
  B00010001
},
//i
{
  B00001110,
  B00000100,
  B00000100,
  B00000100,
  B00001110
},
//j
{
  B00001110,
  B00000100,
  B00000100,
  B00010100,
  B00001100
},
//k
{
  B00010001,
  B00010010,
  B00011100,
  B00010010,
  B00010001
},
//l
{
  B00010000,
  B00010000,
  B00010000,
  B00010000,
  B00011111
},
//m
{
  B00010001,
  B00011011,
  B00010101,
  B00010001,
  B00010001
},
//n
{
  B00010001,
  B00011001,
  B00010101,
  B00010011,
  B00010001
},
//o
{
  B00001110,
  B00010001,
  B00010001,
  B00010001,
  B00001110
},
//p
{
  B00011110,
  B00010001,
  B00011110,
  B00010000,
  B00010000
},
//q
{
  B00001100,
  B00010010,
  B00010010,
  B00010010,
  B00001101
},
//r
{
  B00011110,
  B00010001,
  B00011110,
  B00010010,
  B00010001
},
//s
{
  B00001110,
  B00010000,
  B00001110,
  B00000001,
  B00001110
},
//t
{
  B00011111,
  B00000100,
  B00000100,
  B00000100,
  B00000100
},
//u
{
  B00010001,
  B00010001,
  B00010001,
  B00010001,
  B00001110
},
//v
{
  B00010001,
  B00010001,
  B00010001,
  B00001010,
  B00000100
},
//w
{
  B00010001,
  B00010001,
  B00010101,
  B00011011,
  B00010001
},
//x
{
  B00010001,
  B00001010,
  B00000100,
  B00001010,
  B00010001
},
//y
{
  B00010001,
  B00001010,
  B00000100,
  B00000100,
  B00000100
},
//z
{
  B00011111,
  B00000010,
  B00000100,
  B00001000,
  B00011111
},
//empty
{
  B00011111,
  B00011111,
  B00011111,
  B00011111,
  B00011111
}


};

